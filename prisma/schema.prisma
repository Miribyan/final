generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    created_at    DateTime  @default(now())
    isAdmin       Boolean   @default(false)
    reviews       Review[]
}

model Film {
    id        Int      @id @default(autoincrement())
    category  String
    year      Int
    title     String
    director  String
    createdAt DateTime @default(now())
    reviews   Review[]
}

model Review {
    id         Int      @id @default(autoincrement())
    reviewName String
    filmId     Int
    authorId   String
    imageUrl   String
    content    String   @db.Text
    stars      Int
    createdAt  DateTime @default(now())

    author User @relation(fields: [authorId], references: [id])
    film   Film @relation(fields: [filmId], references: [id])

    @@index([filmId], name: "review_film_id")
    @@index([authorId], name: "review_author_id")
}

model Rating {
    id        Int      @id @default(autoincrement())
    userId    Int
    filmId    Int
    stars     Int
    createdAt DateTime @default(now())
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
